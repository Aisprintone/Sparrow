name: Deploy to Cloudflare Workers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.19.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: sparrow-workers/sparrow-backend/package-lock.json

      - name: Install dependencies
        working-directory: sparrow-workers/sparrow-backend
        run: npm ci

      - name: Run tests
        working-directory: sparrow-workers/sparrow-backend
        run: npm test
        continue-on-error: true

      - name: Deploy to Cloudflare Workers
        if: github.ref == 'refs/heads/main'
        working-directory: sparrow-workers/sparrow-backend
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: sparrow-workers/sparrow-backend/package-lock.json

      - name: Install dependencies
        working-directory: sparrow-workers/sparrow-backend
        run: npm ci

      - name: Deploy to production
        working-directory: sparrow-workers/sparrow-backend
        run: npx wrangler deploy --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
