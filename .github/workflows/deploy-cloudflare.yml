name: Deploy to Cloudflare Workers

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - 'cloudflare-workers/**'
      - '.github/workflows/deploy-cloudflare.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'cloudflare-workers/**'

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: cloudflare-workers/financeai-backend/package-lock.json
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/python_engine/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Install Cloudflare Workers dependencies
        run: |
          cd cloudflare-workers/financeai-backend
          npm ci
          
      - name: Run Cloudflare Workers tests
        run: |
          cd cloudflare-workers/financeai-backend
          npm test -- --passWithNoTests
          
      - name: Build Cloudflare Workers
        run: |
          cd cloudflare-workers/financeai-backend
          npm run build
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          
      - name: Deploy to Cloudflare Workers
        run: |
          cd cloudflare-workers/financeai-backend
          npx wrangler deploy --compatibility-date 2025-01-01
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          id: deploy
          
      - name: Verify Cloudflare deployment
        run: |
          echo "‚úÖ Cloudflare Workers deployment completed"
          echo "üîó Workers URL: https://sparrow-backend.your-subdomain.workers.dev"
          
      - name: Test Python Backend
        run: |
          cd backend/python_engine
          pip install -r requirements.txt
          python -c "import api.main; print('‚úÖ Python backend modules loaded successfully')"
        env:
          PLAID_CLIENT_ID: ${{ secrets.PLAID_CLIENT_ID }}
          PLAID_CLIENT_SECRET: ${{ secrets.PLAID_CLIENT_SECRET }}
          CHASE_API_KEY: ${{ secrets.CHASE_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          
      - name: Health check Cloudflare Workers
        run: |
          echo "üîç Performing Cloudflare Workers health check..."
          sleep 5
          curl -f "https://sparrow-backend.your-subdomain.workers.dev/health" || echo "‚ö†Ô∏è Health check failed, but deployment may still be processing"
